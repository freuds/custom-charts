restartPolicy: Always

kind: Deployment

image:
  repository: openvpn_exporter
  # if not set appVersion field from Chart.yaml is used
  tag: ""
  pullPolicy: IfNotPresent

imagePullSecrets: []
nodeSelector: {}
tolerations: []
affinity: {}
topologySpreadConstraints: []

## Provide a namespace to substitude for the namespace on resources
namespaceOverride: ""

## Security context to be added to openvpn-exporter pods
securityContext: {}
  # fsGroup: 1000
  # runAsUser: 1000
  # runAsNonRoot: true

## Security context to be added to openvpn-exporter containers
containerSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  readOnlyRootFilesystem: true

## Additional labels to add to all resources
customLabels: {}
  # app: openvpn-exporter

## Additional init containers
# These will be added to the openvpn-exporter pod.
extraInitContainers: []
  # - name: init-myservice
  #   image: busybox:1.28
  #   command: [ 'sh', '-c', "sleep 10; done" ]


# Additional volumes, e.g. for secrets used in an extraContainer
extraVolumes: []

# Additional volume mounts for openvpn-exporter container
extraVolumeMounts: []

## For RBAC support:
rbac:
  # Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true

  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

resources: {}
  # limits:
  #   memory: 300Mi
  # requests:
  #   memory: 50Mi

livenessProbe:
  httpGet:
    path: /health
    port: http
readinessProbe:
  httpGet:
    path: /health
    port: http

service:
  annotations: {}
  type: ClusterIP
  port: 9176
  ipDualStack:
    enabled: false
    ipFamilies: ["IPv6", "IPv4"]
    ipFamilyPolicy: "PreferDualStack"

podAnnotations: {}

extraArgs: []
#  --history.limit=1000

envFrom: []
#  - secretRef:
#      name: name-of-secret

replicas: 1

# Uncomment to set a specific revisionHistoryLimit. Defaults to 10 as per Kubernetes API if not set.
revisionHistoryLimit: 3

# Enable this if you're using https://github.com/prometheus-operator/prometheus-operator
# A service monitor will be created per each item in serviceMonitor.params[]
serviceMonitor:
  enabled: false
  # Default value is the namespace the release is deployed to
  # namespace: monitoring

  path: /metrics

  # Fall back to the prometheus default unless specified
  # interval: 10s
  scrapeTimeout: 10s

  # Relabelings dynamically rewrite the label set of a target before it gets scraped.
  # Set if defined unless overriden by params.relabelings.
  # https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#monitoring.coreos.com/v1.RelabelConfig
  relabelings: []
    # - sourceLabels: [__address__]
    #   targetLabel: __param_target
    # - sourceLabels: [__param_target]
    #   targetLabel: instance

  # Metric relabeling is applied to samples as the last step before ingestion.
  # Set if defined unless overriden by params.additionalMetricsRelabels.
  # This sets fixed relabel configs with action 'replace'.
  additionalMetricsRelabels: {}
    # targetLabel1: replacementValue1
    # targetLabel2: replacementValue2

  # Metric relabeling is applied to samples as the last step before ingestion.
  # Set if defined unless overridden by params.additionalMetricsRelabelConfigs.
  # This allows setting arbitrary relabel configs.
  # https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#monitoring.coreos.com/v1.RelabelConfig
  additionalMetricsRelabelConfigs: []
    # - sourceLabels: [__name__]
    #   targetLabel: __name__
    #   action: replace
    #   regex: (.*)
    #   replacement: prefix_$1

  # Label for selecting service monitors as set in Prometheus CRD.
  # https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#monitoring.coreos.com/v1.PrometheusSpec
  selector:
    prometheus: kube-prometheus

  # Retain the job and instance labels of the metrics retrieved by the openvpn-exporter
  # https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#monitoring.coreos.com/v1.Endpoint
  honorLabels: true

  ## If true, a ServiceMonitor CRD is created for openvpn-exporter itself
  ##
  selfMonitor:
    enabled: false
    additionalMetricsRelabels: {}
    additionalRelabeling: []
    labels: {}
    path: /metrics
    scheme: http
    port: ""
    tlsConfig: {}
    interval: 30s
    scrapeTimeout: 30s

strategy:
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0
  type: RollingUpdate
